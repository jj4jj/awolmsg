// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: awolapp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "awolapp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace awolapp {

namespace {

const ::google::protobuf::Descriptor* MailAttachment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailAttachment_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mail_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatSender_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatSender_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notice_reflection_ = NULL;
const ::google::protobuf::Descriptor* AwolMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AwolMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AwolMsgItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AwolMsgItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSAwalMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSAwalMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSAwalMsg_Cookie_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSAwalMsg_Cookie_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSAwalMsg_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSAwalMsg_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSAwalMsg_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSAwalMsg_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSAwalMsg_Notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSAwalMsg_Notify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CSAwalMsg_MsgCMD_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CSAwalMsg_AwolMsgSyncCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ActorType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MailState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MailOpCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_awolapp_2eproto() {
  protobuf_AddDesc_awolapp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "awolapp.proto");
  GOOGLE_CHECK(file != NULL);
  MailAttachment_descriptor_ = file->message_type(0);
  static const int MailAttachment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttachment, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttachment, data_),
  };
  MailAttachment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailAttachment_descriptor_,
      MailAttachment::default_instance_,
      MailAttachment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttachment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttachment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailAttachment));
  MailContent_descriptor_ = file->message_type(1);
  static const int MailContent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, data_),
  };
  MailContent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailContent_descriptor_,
      MailContent::default_instance_,
      MailContent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailContent));
  MailOption_descriptor_ = file->message_type(2);
  static const int MailOption_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOption, expire_timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOption, start_timestamp_),
  };
  MailOption_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailOption_descriptor_,
      MailOption::default_instance_,
      MailOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOption, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOption, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailOption));
  Mail_descriptor_ = file->message_type(3);
  static const int Mail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, attachements_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, option_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, state_),
  };
  Mail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Mail_descriptor_,
      Mail::default_instance_,
      Mail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Mail));
  ChatSender_descriptor_ = file->message_type(4);
  static const int ChatSender_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatSender, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatSender, name_),
  };
  ChatSender_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChatSender_descriptor_,
      ChatSender::default_instance_,
      ChatSender_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatSender, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatSender, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChatSender));
  ChatContent_descriptor_ = file->message_type(5);
  static const int ChatContent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatContent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatContent, data_),
  };
  ChatContent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChatContent_descriptor_,
      ChatContent::default_instance_,
      ChatContent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatContent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatContent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChatContent));
  ChatMsg_descriptor_ = file->message_type(6);
  static const int ChatMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg, timestamp_),
  };
  ChatMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChatMsg_descriptor_,
      ChatMsg::default_instance_,
      ChatMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChatMsg));
  Notice_descriptor_ = file->message_type(7);
  static const int Notice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, data_),
  };
  Notice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Notice_descriptor_,
      Notice::default_instance_,
      Notice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Notice));
  AwolMsg_descriptor_ = file->message_type(8);
  static const int AwolMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsg, mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsg, chat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsg, notice_),
  };
  AwolMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AwolMsg_descriptor_,
      AwolMsg::default_instance_,
      AwolMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AwolMsg));
  AwolMsgItem_descriptor_ = file->message_type(9);
  static const int AwolMsgItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsgItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsgItem, msg_),
  };
  AwolMsgItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AwolMsgItem_descriptor_,
      AwolMsgItem::default_instance_,
      AwolMsgItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsgItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwolMsgItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AwolMsgItem));
  CSAwalMsg_descriptor_ = file->message_type(10);
  static const int CSAwalMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, cookie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, notify_),
  };
  CSAwalMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSAwalMsg_descriptor_,
      CSAwalMsg::default_instance_,
      CSAwalMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSAwalMsg));
  CSAwalMsg_Cookie_descriptor_ = CSAwalMsg_descriptor_->nested_type(0);
  static const int CSAwalMsg_Cookie_offsets_[1] = {
  };
  CSAwalMsg_Cookie_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSAwalMsg_Cookie_descriptor_,
      CSAwalMsg_Cookie::default_instance_,
      CSAwalMsg_Cookie_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Cookie, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Cookie, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSAwalMsg_Cookie));
  CSAwalMsg_Request_descriptor_ = CSAwalMsg_descriptor_->nested_type(1);
  static const int CSAwalMsg_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, sendto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, opcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, msg_),
  };
  CSAwalMsg_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSAwalMsg_Request_descriptor_,
      CSAwalMsg_Request::default_instance_,
      CSAwalMsg_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSAwalMsg_Request));
  CSAwalMsg_Response_descriptor_ = CSAwalMsg_descriptor_->nested_type(2);
  static const int CSAwalMsg_Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Response, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Response, msglist_),
  };
  CSAwalMsg_Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSAwalMsg_Response_descriptor_,
      CSAwalMsg_Response::default_instance_,
      CSAwalMsg_Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSAwalMsg_Response));
  CSAwalMsg_Notify_descriptor_ = CSAwalMsg_descriptor_->nested_type(3);
  static const int CSAwalMsg_Notify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Notify, sync_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Notify, msglist_),
  };
  CSAwalMsg_Notify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSAwalMsg_Notify_descriptor_,
      CSAwalMsg_Notify::default_instance_,
      CSAwalMsg_Notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Notify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSAwalMsg_Notify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSAwalMsg_Notify));
  CSAwalMsg_MsgCMD_descriptor_ = CSAwalMsg_descriptor_->enum_type(0);
  CSAwalMsg_AwolMsgSyncCode_descriptor_ = CSAwalMsg_descriptor_->enum_type(1);
  ActorType_descriptor_ = file->enum_type(0);
  MsgType_descriptor_ = file->enum_type(1);
  MailState_descriptor_ = file->enum_type(2);
  MailOpCode_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_awolapp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailAttachment_descriptor_, &MailAttachment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailContent_descriptor_, &MailContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailOption_descriptor_, &MailOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Mail_descriptor_, &Mail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChatSender_descriptor_, &ChatSender::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChatContent_descriptor_, &ChatContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChatMsg_descriptor_, &ChatMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Notice_descriptor_, &Notice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AwolMsg_descriptor_, &AwolMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AwolMsgItem_descriptor_, &AwolMsgItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSAwalMsg_descriptor_, &CSAwalMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSAwalMsg_Cookie_descriptor_, &CSAwalMsg_Cookie::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSAwalMsg_Request_descriptor_, &CSAwalMsg_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSAwalMsg_Response_descriptor_, &CSAwalMsg_Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSAwalMsg_Notify_descriptor_, &CSAwalMsg_Notify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_awolapp_2eproto() {
  delete MailAttachment::default_instance_;
  delete MailAttachment_reflection_;
  delete MailContent::default_instance_;
  delete MailContent_reflection_;
  delete MailOption::default_instance_;
  delete MailOption_reflection_;
  delete Mail::default_instance_;
  delete Mail_reflection_;
  delete ChatSender::default_instance_;
  delete ChatSender_reflection_;
  delete ChatContent::default_instance_;
  delete ChatContent_reflection_;
  delete ChatMsg::default_instance_;
  delete ChatMsg_reflection_;
  delete Notice::default_instance_;
  delete Notice_reflection_;
  delete AwolMsg::default_instance_;
  delete AwolMsg_reflection_;
  delete AwolMsgItem::default_instance_;
  delete AwolMsgItem_reflection_;
  delete CSAwalMsg::default_instance_;
  delete CSAwalMsg_reflection_;
  delete CSAwalMsg_Cookie::default_instance_;
  delete CSAwalMsg_Cookie_reflection_;
  delete CSAwalMsg_Request::default_instance_;
  delete CSAwalMsg_Request_reflection_;
  delete CSAwalMsg_Response::default_instance_;
  delete CSAwalMsg_Response_reflection_;
  delete CSAwalMsg_Notify::default_instance_;
  delete CSAwalMsg_Notify_reflection_;
}

void protobuf_AddDesc_awolapp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::awolmsg::protobuf_AddDesc_awolmsg_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rawolapp.proto\022\007awolapp\032\rawolmsg.proto\""
    ",\n\016MailAttachment\022\014\n\004type\030\001 \001(\005\022\014\n\004data\030"
    "\002 \001(\014\")\n\013MailContent\022\014\n\004type\030\001 \001(\005\022\014\n\004da"
    "ta\030\002 \001(\014\"\?\n\nMailOption\022\030\n\020expire_timesta"
    "mp\030\001 \001(\r\022\027\n\017start_timestamp\030\002 \001(\r\"\323\001\n\004Ma"
    "il\022\014\n\004from\030\002 \001(\004\022\016\n\006sender\030\003 \001(\t\022\017\n\007subj"
    "ect\030\004 \001(\t\022%\n\007content\030\005 \001(\0132\024.awolapp.Mai"
    "lContent\022-\n\014attachements\030\006 \003(\0132\027.awolapp"
    ".MailAttachment\022#\n\006option\030\007 \001(\0132\023.awolap"
    "p.MailOption\022!\n\005state\030\010 \001(\0162\022.awolapp.Ma"
    "ilState\"&\n\nChatSender\022\n\n\002id\030\001 \001(\004\022\014\n\004nam"
    "e\030\002 \001(\t\")\n\013ChatContent\022\014\n\004type\030\001 \001(\005\022\014\n\004"
    "data\030\002 \001(\014\"h\n\007ChatMsg\022#\n\006sender\030\001 \002(\0132\023."
    "awolapp.ChatSender\022%\n\007content\030\002 \001(\0132\024.aw"
    "olapp.ChatContent\022\021\n\ttimestamp\030\003 \001(\r\"$\n\006"
    "Notice\022\014\n\004type\030\001 \002(\005\022\014\n\004data\030\002 \001(\014\"g\n\007Aw"
    "olMsg\022\033\n\004mail\030\001 \001(\0132\r.awolapp.Mail\022\036\n\004ch"
    "at\030\002 \001(\0132\020.awolapp.ChatMsg\022\037\n\006notice\030\003 \001"
    "(\0132\017.awolapp.Notice\"8\n\013AwolMsgItem\022\n\n\002id"
    "\030\001 \002(\004\022\035\n\003msg\030\002 \002(\0132\020.awolapp.AwolMsg\"\305\005"
    "\n\tCSAwalMsg\022&\n\003cmd\030\001 \002(\0162\031.awolapp.CSAwa"
    "lMsg.MsgCMD\022)\n\006cookie\030\002 \001(\0132\031.awolapp.CS"
    "AwalMsg.Cookie\022+\n\007request\030\003 \001(\0132\032.awolap"
    "p.CSAwalMsg.Request\022-\n\010response\030\004 \001(\0132\033."
    "awolapp.CSAwalMsg.Response\022)\n\006notify\030\005 \001"
    "(\0132\031.awolapp.CSAwalMsg.Notify\032\010\n\006Cookie\032"
    "g\n\007Request\022\n\n\002id\030\002 \001(\004\022!\n\006sendto\030\003 \001(\0132\021"
    ".awolmsg.MsgAgent\022\016\n\006opcode\030\004 \001(\005\022\035\n\003msg"
    "\030\005 \001(\0132\020.awolapp.AwolMsg\032>\n\010Response\022\013\n\003"
    "ret\030\001 \002(\005\022%\n\007msglist\030\002 \003(\0132\024.awolapp.Awo"
    "lMsgItem\032a\n\006Notify\0220\n\004sync\030\001 \002(\0162\".awola"
    "pp.CSAwalMsg.AwolMsgSyncCode\022%\n\007msglist\030"
    "\002 \003(\0132\024.awolapp.AwolMsgItem\"{\n\006MsgCMD\022\020\n"
    "\014MSG_CMD_LIST\020\001\022\022\n\016MSG_CMD_UPDATE\020\002\022\022\n\016M"
    "SG_CMD_SENDTO\020\003\022\017\n\013MSG_CMD_GET\020\004\022\022\n\016MSG_"
    "CMD_REMOVE\020\005\022\022\n\016MSG_CMD_NOTIFY\020\006\"K\n\017Awol"
    "MsgSyncCode\022\023\n\017MSG_SYNC_REMOVE\020\001\022\021\n\rMSG_"
    "SYNC_RECV\020\002\022\020\n\014MSG_SYNC_GET\020\003*N\n\tActorTy"
    "pe\022\023\n\017ACTOR_TYPE_NONE\020\000\022\025\n\021ACTOR_TYPE_SE"
    "RVER\020\001\022\025\n\021ACTOR_TYPE_PLAYER\020\002*W\n\007MsgType"
    "\022\021\n\rMSG_TYPE_NONE\020\000\022\021\n\rMSG_TYPE_MAIL\020\001\022\021"
    "\n\rMSG_TYPE_CHAT\020\002\022\023\n\017MSG_TYPE_NOTICE\020\003*K"
    "\n\tMailState\022\023\n\017MAIL_STATE_INIT\020\000\022\023\n\017MAIL"
    "_STATE_READ\020\001\022\024\n\020MAIL_STATE_FETCH\020\002*1\n\nM"
    "ailOpCode\022\020\n\014MAIL_OP_READ\020\001\022\021\n\rMAIL_OP_F"
    "ETCH\020\002", 1806);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "awolapp.proto", &protobuf_RegisterTypes);
  MailAttachment::default_instance_ = new MailAttachment();
  MailContent::default_instance_ = new MailContent();
  MailOption::default_instance_ = new MailOption();
  Mail::default_instance_ = new Mail();
  ChatSender::default_instance_ = new ChatSender();
  ChatContent::default_instance_ = new ChatContent();
  ChatMsg::default_instance_ = new ChatMsg();
  Notice::default_instance_ = new Notice();
  AwolMsg::default_instance_ = new AwolMsg();
  AwolMsgItem::default_instance_ = new AwolMsgItem();
  CSAwalMsg::default_instance_ = new CSAwalMsg();
  CSAwalMsg_Cookie::default_instance_ = new CSAwalMsg_Cookie();
  CSAwalMsg_Request::default_instance_ = new CSAwalMsg_Request();
  CSAwalMsg_Response::default_instance_ = new CSAwalMsg_Response();
  CSAwalMsg_Notify::default_instance_ = new CSAwalMsg_Notify();
  MailAttachment::default_instance_->InitAsDefaultInstance();
  MailContent::default_instance_->InitAsDefaultInstance();
  MailOption::default_instance_->InitAsDefaultInstance();
  Mail::default_instance_->InitAsDefaultInstance();
  ChatSender::default_instance_->InitAsDefaultInstance();
  ChatContent::default_instance_->InitAsDefaultInstance();
  ChatMsg::default_instance_->InitAsDefaultInstance();
  Notice::default_instance_->InitAsDefaultInstance();
  AwolMsg::default_instance_->InitAsDefaultInstance();
  AwolMsgItem::default_instance_->InitAsDefaultInstance();
  CSAwalMsg::default_instance_->InitAsDefaultInstance();
  CSAwalMsg_Cookie::default_instance_->InitAsDefaultInstance();
  CSAwalMsg_Request::default_instance_->InitAsDefaultInstance();
  CSAwalMsg_Response::default_instance_->InitAsDefaultInstance();
  CSAwalMsg_Notify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_awolapp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_awolapp_2eproto {
  StaticDescriptorInitializer_awolapp_2eproto() {
    protobuf_AddDesc_awolapp_2eproto();
  }
} static_descriptor_initializer_awolapp_2eproto_;
const ::google::protobuf::EnumDescriptor* ActorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorType_descriptor_;
}
bool ActorType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgType_descriptor_;
}
bool MsgType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailState_descriptor_;
}
bool MailState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailOpCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailOpCode_descriptor_;
}
bool MailOpCode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MailAttachment::kTypeFieldNumber;
const int MailAttachment::kDataFieldNumber;
#endif  // !_MSC_VER

MailAttachment::MailAttachment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.MailAttachment)
}

void MailAttachment::InitAsDefaultInstance() {
}

MailAttachment::MailAttachment(const MailAttachment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.MailAttachment)
}

void MailAttachment::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailAttachment::~MailAttachment() {
  // @@protoc_insertion_point(destructor:awolapp.MailAttachment)
  SharedDtor();
}

void MailAttachment::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void MailAttachment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailAttachment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailAttachment_descriptor_;
}

const MailAttachment& MailAttachment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

MailAttachment* MailAttachment::default_instance_ = NULL;

MailAttachment* MailAttachment::New() const {
  return new MailAttachment;
}

void MailAttachment::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailAttachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.MailAttachment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.MailAttachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.MailAttachment)
  return false;
#undef DO_
}

void MailAttachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.MailAttachment)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.MailAttachment)
}

::google::protobuf::uint8* MailAttachment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.MailAttachment)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.MailAttachment)
  return target;
}

int MailAttachment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailAttachment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailAttachment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailAttachment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailAttachment::MergeFrom(const MailAttachment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailAttachment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailAttachment::CopyFrom(const MailAttachment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailAttachment::IsInitialized() const {

  return true;
}

void MailAttachment::Swap(MailAttachment* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailAttachment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailAttachment_descriptor_;
  metadata.reflection = MailAttachment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailContent::kTypeFieldNumber;
const int MailContent::kDataFieldNumber;
#endif  // !_MSC_VER

MailContent::MailContent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.MailContent)
}

void MailContent::InitAsDefaultInstance() {
}

MailContent::MailContent(const MailContent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.MailContent)
}

void MailContent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailContent::~MailContent() {
  // @@protoc_insertion_point(destructor:awolapp.MailContent)
  SharedDtor();
}

void MailContent::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void MailContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailContent_descriptor_;
}

const MailContent& MailContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

MailContent* MailContent::default_instance_ = NULL;

MailContent* MailContent::New() const {
  return new MailContent;
}

void MailContent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.MailContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.MailContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.MailContent)
  return false;
#undef DO_
}

void MailContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.MailContent)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.MailContent)
}

::google::protobuf::uint8* MailContent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.MailContent)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.MailContent)
  return target;
}

int MailContent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailContent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailContent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailContent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailContent::MergeFrom(const MailContent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailContent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailContent::CopyFrom(const MailContent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailContent::IsInitialized() const {

  return true;
}

void MailContent::Swap(MailContent* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailContent_descriptor_;
  metadata.reflection = MailContent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailOption::kExpireTimestampFieldNumber;
const int MailOption::kStartTimestampFieldNumber;
#endif  // !_MSC_VER

MailOption::MailOption()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.MailOption)
}

void MailOption::InitAsDefaultInstance() {
}

MailOption::MailOption(const MailOption& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.MailOption)
}

void MailOption::SharedCtor() {
  _cached_size_ = 0;
  expire_timestamp_ = 0u;
  start_timestamp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailOption::~MailOption() {
  // @@protoc_insertion_point(destructor:awolapp.MailOption)
  SharedDtor();
}

void MailOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailOption_descriptor_;
}

const MailOption& MailOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

MailOption* MailOption::default_instance_ = NULL;

MailOption* MailOption::New() const {
  return new MailOption;
}

void MailOption::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MailOption*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(expire_timestamp_, start_timestamp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.MailOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 expire_timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_timestamp_)));
          set_has_expire_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_start_timestamp;
        break;
      }

      // optional uint32 start_timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_start_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_timestamp_)));
          set_has_start_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.MailOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.MailOption)
  return false;
#undef DO_
}

void MailOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.MailOption)
  // optional uint32 expire_timestamp = 1;
  if (has_expire_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->expire_timestamp(), output);
  }

  // optional uint32 start_timestamp = 2;
  if (has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_timestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.MailOption)
}

::google::protobuf::uint8* MailOption::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.MailOption)
  // optional uint32 expire_timestamp = 1;
  if (has_expire_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->expire_timestamp(), target);
  }

  // optional uint32 start_timestamp = 2;
  if (has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_timestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.MailOption)
  return target;
}

int MailOption::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 expire_timestamp = 1;
    if (has_expire_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expire_timestamp());
    }

    // optional uint32 start_timestamp = 2;
    if (has_start_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_timestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailOption::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailOption* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailOption*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailOption::MergeFrom(const MailOption& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_expire_timestamp()) {
      set_expire_timestamp(from.expire_timestamp());
    }
    if (from.has_start_timestamp()) {
      set_start_timestamp(from.start_timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailOption::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailOption::CopyFrom(const MailOption& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailOption::IsInitialized() const {

  return true;
}

void MailOption::Swap(MailOption* other) {
  if (other != this) {
    std::swap(expire_timestamp_, other->expire_timestamp_);
    std::swap(start_timestamp_, other->start_timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailOption_descriptor_;
  metadata.reflection = MailOption_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Mail::kFromFieldNumber;
const int Mail::kSenderFieldNumber;
const int Mail::kSubjectFieldNumber;
const int Mail::kContentFieldNumber;
const int Mail::kAttachementsFieldNumber;
const int Mail::kOptionFieldNumber;
const int Mail::kStateFieldNumber;
#endif  // !_MSC_VER

Mail::Mail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.Mail)
}

void Mail::InitAsDefaultInstance() {
  content_ = const_cast< ::awolapp::MailContent*>(&::awolapp::MailContent::default_instance());
  option_ = const_cast< ::awolapp::MailOption*>(&::awolapp::MailOption::default_instance());
}

Mail::Mail(const Mail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.Mail)
}

void Mail::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  from_ = GOOGLE_ULONGLONG(0);
  sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = NULL;
  option_ = NULL;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Mail::~Mail() {
  // @@protoc_insertion_point(destructor:awolapp.Mail)
  SharedDtor();
}

void Mail::SharedDtor() {
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_;
  }
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subject_;
  }
  if (this != default_instance_) {
    delete content_;
    delete option_;
  }
}

void Mail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mail_descriptor_;
}

const Mail& Mail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

Mail* Mail::default_instance_ = NULL;

Mail* Mail::New() const {
  return new Mail;
}

void Mail::Clear() {
  if (_has_bits_[0 / 32] & 111) {
    from_ = GOOGLE_ULONGLONG(0);
    if (has_sender()) {
      if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sender_->clear();
      }
    }
    if (has_subject()) {
      if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subject_->clear();
      }
    }
    if (has_content()) {
      if (content_ != NULL) content_->::awolapp::MailContent::Clear();
    }
    if (has_option()) {
      if (option_ != NULL) option_->::awolapp::MailOption::Clear();
    }
    state_ = 0;
  }
  attachements_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Mail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.Mail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 from = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sender;
        break;
      }

      // optional string sender = 3;
      case 3: {
        if (tag == 26) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sender");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_subject;
        break;
      }

      // optional string subject = 4;
      case 4: {
        if (tag == 34) {
         parse_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subject().data(), this->subject().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subject");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // optional .awolapp.MailContent content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attachements;
        break;
      }

      // repeated .awolapp.MailAttachment attachements = 6;
      case 6: {
        if (tag == 50) {
         parse_attachements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attachements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attachements;
        if (input->ExpectTag(58)) goto parse_option;
        break;
      }

      // optional .awolapp.MailOption option = 7;
      case 7: {
        if (tag == 58) {
         parse_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_state;
        break;
      }

      // optional .awolapp.MailState state = 8;
      case 8: {
        if (tag == 64) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::awolapp::MailState_IsValid(value)) {
            set_state(static_cast< ::awolapp::MailState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.Mail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.Mail)
  return false;
#undef DO_
}

void Mail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.Mail)
  // optional uint64 from = 2;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->from(), output);
  }

  // optional string sender = 3;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  // optional string subject = 4;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->subject(), output);
  }

  // optional .awolapp.MailContent content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->content(), output);
  }

  // repeated .awolapp.MailAttachment attachements = 6;
  for (int i = 0; i < this->attachements_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->attachements(i), output);
  }

  // optional .awolapp.MailOption option = 7;
  if (has_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->option(), output);
  }

  // optional .awolapp.MailState state = 8;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.Mail)
}

::google::protobuf::uint8* Mail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.Mail)
  // optional uint64 from = 2;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->from(), target);
  }

  // optional string sender = 3;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  // optional string subject = 4;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->subject(), target);
  }

  // optional .awolapp.MailContent content = 5;
  if (has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->content(), target);
  }

  // repeated .awolapp.MailAttachment attachements = 6;
  for (int i = 0; i < this->attachements_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->attachements(i), target);
  }

  // optional .awolapp.MailOption option = 7;
  if (has_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->option(), target);
  }

  // optional .awolapp.MailState state = 8;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.Mail)
  return target;
}

int Mail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 from = 2;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from());
    }

    // optional string sender = 3;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }

    // optional string subject = 4;
    if (has_subject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subject());
    }

    // optional .awolapp.MailContent content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content());
    }

    // optional .awolapp.MailOption option = 7;
    if (has_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->option());
    }

    // optional .awolapp.MailState state = 8;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  // repeated .awolapp.MailAttachment attachements = 6;
  total_size += 1 * this->attachements_size();
  for (int i = 0; i < this->attachements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attachements(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Mail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Mail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Mail::MergeFrom(const Mail& from) {
  GOOGLE_CHECK_NE(&from, this);
  attachements_.MergeFrom(from.attachements_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from()) {
      set_from(from.from());
    }
    if (from.has_sender()) {
      set_sender(from.sender());
    }
    if (from.has_subject()) {
      set_subject(from.subject());
    }
    if (from.has_content()) {
      mutable_content()->::awolapp::MailContent::MergeFrom(from.content());
    }
    if (from.has_option()) {
      mutable_option()->::awolapp::MailOption::MergeFrom(from.option());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Mail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mail::CopyFrom(const Mail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail::IsInitialized() const {

  return true;
}

void Mail::Swap(Mail* other) {
  if (other != this) {
    std::swap(from_, other->from_);
    std::swap(sender_, other->sender_);
    std::swap(subject_, other->subject_);
    std::swap(content_, other->content_);
    attachements_.Swap(&other->attachements_);
    std::swap(option_, other->option_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Mail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mail_descriptor_;
  metadata.reflection = Mail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChatSender::kIdFieldNumber;
const int ChatSender::kNameFieldNumber;
#endif  // !_MSC_VER

ChatSender::ChatSender()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.ChatSender)
}

void ChatSender::InitAsDefaultInstance() {
}

ChatSender::ChatSender(const ChatSender& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.ChatSender)
}

void ChatSender::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatSender::~ChatSender() {
  // @@protoc_insertion_point(destructor:awolapp.ChatSender)
  SharedDtor();
}

void ChatSender::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ChatSender::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatSender::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatSender_descriptor_;
}

const ChatSender& ChatSender::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

ChatSender* ChatSender::default_instance_ = NULL;

ChatSender* ChatSender::New() const {
  return new ChatSender;
}

void ChatSender::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChatSender::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.ChatSender)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.ChatSender)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.ChatSender)
  return false;
#undef DO_
}

void ChatSender::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.ChatSender)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.ChatSender)
}

::google::protobuf::uint8* ChatSender::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.ChatSender)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.ChatSender)
  return target;
}

int ChatSender::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatSender::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChatSender* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChatSender*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChatSender::MergeFrom(const ChatSender& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChatSender::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatSender::CopyFrom(const ChatSender& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatSender::IsInitialized() const {

  return true;
}

void ChatSender::Swap(ChatSender* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChatSender::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatSender_descriptor_;
  metadata.reflection = ChatSender_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChatContent::kTypeFieldNumber;
const int ChatContent::kDataFieldNumber;
#endif  // !_MSC_VER

ChatContent::ChatContent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.ChatContent)
}

void ChatContent::InitAsDefaultInstance() {
}

ChatContent::ChatContent(const ChatContent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.ChatContent)
}

void ChatContent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatContent::~ChatContent() {
  // @@protoc_insertion_point(destructor:awolapp.ChatContent)
  SharedDtor();
}

void ChatContent::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void ChatContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatContent_descriptor_;
}

const ChatContent& ChatContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

ChatContent* ChatContent::default_instance_ = NULL;

ChatContent* ChatContent::New() const {
  return new ChatContent;
}

void ChatContent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChatContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.ChatContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.ChatContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.ChatContent)
  return false;
#undef DO_
}

void ChatContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.ChatContent)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.ChatContent)
}

::google::protobuf::uint8* ChatContent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.ChatContent)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.ChatContent)
  return target;
}

int ChatContent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatContent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChatContent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChatContent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChatContent::MergeFrom(const ChatContent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChatContent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatContent::CopyFrom(const ChatContent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatContent::IsInitialized() const {

  return true;
}

void ChatContent::Swap(ChatContent* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChatContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatContent_descriptor_;
  metadata.reflection = ChatContent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChatMsg::kSenderFieldNumber;
const int ChatMsg::kContentFieldNumber;
const int ChatMsg::kTimestampFieldNumber;
#endif  // !_MSC_VER

ChatMsg::ChatMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.ChatMsg)
}

void ChatMsg::InitAsDefaultInstance() {
  sender_ = const_cast< ::awolapp::ChatSender*>(&::awolapp::ChatSender::default_instance());
  content_ = const_cast< ::awolapp::ChatContent*>(&::awolapp::ChatContent::default_instance());
}

ChatMsg::ChatMsg(const ChatMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.ChatMsg)
}

void ChatMsg::SharedCtor() {
  _cached_size_ = 0;
  sender_ = NULL;
  content_ = NULL;
  timestamp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatMsg::~ChatMsg() {
  // @@protoc_insertion_point(destructor:awolapp.ChatMsg)
  SharedDtor();
}

void ChatMsg::SharedDtor() {
  if (this != default_instance_) {
    delete sender_;
    delete content_;
  }
}

void ChatMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMsg_descriptor_;
}

const ChatMsg& ChatMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

ChatMsg* ChatMsg::default_instance_ = NULL;

ChatMsg* ChatMsg::New() const {
  return new ChatMsg;
}

void ChatMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_sender()) {
      if (sender_ != NULL) sender_->::awolapp::ChatSender::Clear();
    }
    if (has_content()) {
      if (content_ != NULL) content_->::awolapp::ChatContent::Clear();
    }
    timestamp_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.ChatMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .awolapp.ChatSender sender = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional .awolapp.ChatContent content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timestamp;
        break;
      }

      // optional uint32 timestamp = 3;
      case 3: {
        if (tag == 24) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.ChatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.ChatMsg)
  return false;
#undef DO_
}

void ChatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.ChatMsg)
  // required .awolapp.ChatSender sender = 1;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sender(), output);
  }

  // optional .awolapp.ChatContent content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->content(), output);
  }

  // optional uint32 timestamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.ChatMsg)
}

::google::protobuf::uint8* ChatMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.ChatMsg)
  // required .awolapp.ChatSender sender = 1;
  if (has_sender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sender(), target);
  }

  // optional .awolapp.ChatContent content = 2;
  if (has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->content(), target);
  }

  // optional uint32 timestamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.ChatMsg)
  return target;
}

int ChatMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .awolapp.ChatSender sender = 1;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sender());
    }

    // optional .awolapp.ChatContent content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content());
    }

    // optional uint32 timestamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChatMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChatMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChatMsg::MergeFrom(const ChatMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sender()) {
      mutable_sender()->::awolapp::ChatSender::MergeFrom(from.sender());
    }
    if (from.has_content()) {
      mutable_content()->::awolapp::ChatContent::MergeFrom(from.content());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChatMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMsg::CopyFrom(const ChatMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChatMsg::Swap(ChatMsg* other) {
  if (other != this) {
    std::swap(sender_, other->sender_);
    std::swap(content_, other->content_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChatMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMsg_descriptor_;
  metadata.reflection = ChatMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Notice::kTypeFieldNumber;
const int Notice::kDataFieldNumber;
#endif  // !_MSC_VER

Notice::Notice()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.Notice)
}

void Notice::InitAsDefaultInstance() {
}

Notice::Notice(const Notice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.Notice)
}

void Notice::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Notice::~Notice() {
  // @@protoc_insertion_point(destructor:awolapp.Notice)
  SharedDtor();
}

void Notice::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Notice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notice_descriptor_;
}

const Notice& Notice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

Notice* Notice::default_instance_ = NULL;

Notice* Notice::New() const {
  return new Notice;
}

void Notice::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Notice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.Notice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.Notice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.Notice)
  return false;
#undef DO_
}

void Notice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.Notice)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.Notice)
}

::google::protobuf::uint8* Notice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.Notice)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.Notice)
  return target;
}

int Notice::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Notice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Notice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Notice::MergeFrom(const Notice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Notice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notice::CopyFrom(const Notice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notice::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Notice::Swap(Notice* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Notice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notice_descriptor_;
  metadata.reflection = Notice_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AwolMsg::kMailFieldNumber;
const int AwolMsg::kChatFieldNumber;
const int AwolMsg::kNoticeFieldNumber;
#endif  // !_MSC_VER

AwolMsg::AwolMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.AwolMsg)
}

void AwolMsg::InitAsDefaultInstance() {
  mail_ = const_cast< ::awolapp::Mail*>(&::awolapp::Mail::default_instance());
  chat_ = const_cast< ::awolapp::ChatMsg*>(&::awolapp::ChatMsg::default_instance());
  notice_ = const_cast< ::awolapp::Notice*>(&::awolapp::Notice::default_instance());
}

AwolMsg::AwolMsg(const AwolMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.AwolMsg)
}

void AwolMsg::SharedCtor() {
  _cached_size_ = 0;
  mail_ = NULL;
  chat_ = NULL;
  notice_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AwolMsg::~AwolMsg() {
  // @@protoc_insertion_point(destructor:awolapp.AwolMsg)
  SharedDtor();
}

void AwolMsg::SharedDtor() {
  if (this != default_instance_) {
    delete mail_;
    delete chat_;
    delete notice_;
  }
}

void AwolMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwolMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AwolMsg_descriptor_;
}

const AwolMsg& AwolMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

AwolMsg* AwolMsg::default_instance_ = NULL;

AwolMsg* AwolMsg::New() const {
  return new AwolMsg;
}

void AwolMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_mail()) {
      if (mail_ != NULL) mail_->::awolapp::Mail::Clear();
    }
    if (has_chat()) {
      if (chat_ != NULL) chat_->::awolapp::ChatMsg::Clear();
    }
    if (has_notice()) {
      if (notice_ != NULL) notice_->::awolapp::Notice::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AwolMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.AwolMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .awolapp.Mail mail = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_chat;
        break;
      }

      // optional .awolapp.ChatMsg chat = 2;
      case 2: {
        if (tag == 18) {
         parse_chat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_notice;
        break;
      }

      // optional .awolapp.Notice notice = 3;
      case 3: {
        if (tag == 26) {
         parse_notice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notice()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.AwolMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.AwolMsg)
  return false;
#undef DO_
}

void AwolMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.AwolMsg)
  // optional .awolapp.Mail mail = 1;
  if (has_mail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mail(), output);
  }

  // optional .awolapp.ChatMsg chat = 2;
  if (has_chat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chat(), output);
  }

  // optional .awolapp.Notice notice = 3;
  if (has_notice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->notice(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.AwolMsg)
}

::google::protobuf::uint8* AwolMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.AwolMsg)
  // optional .awolapp.Mail mail = 1;
  if (has_mail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mail(), target);
  }

  // optional .awolapp.ChatMsg chat = 2;
  if (has_chat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->chat(), target);
  }

  // optional .awolapp.Notice notice = 3;
  if (has_notice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->notice(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.AwolMsg)
  return target;
}

int AwolMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .awolapp.Mail mail = 1;
    if (has_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mail());
    }

    // optional .awolapp.ChatMsg chat = 2;
    if (has_chat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chat());
    }

    // optional .awolapp.Notice notice = 3;
    if (has_notice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notice());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwolMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AwolMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AwolMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AwolMsg::MergeFrom(const AwolMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail()) {
      mutable_mail()->::awolapp::Mail::MergeFrom(from.mail());
    }
    if (from.has_chat()) {
      mutable_chat()->::awolapp::ChatMsg::MergeFrom(from.chat());
    }
    if (from.has_notice()) {
      mutable_notice()->::awolapp::Notice::MergeFrom(from.notice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AwolMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwolMsg::CopyFrom(const AwolMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwolMsg::IsInitialized() const {

  if (has_chat()) {
    if (!this->chat().IsInitialized()) return false;
  }
  if (has_notice()) {
    if (!this->notice().IsInitialized()) return false;
  }
  return true;
}

void AwolMsg::Swap(AwolMsg* other) {
  if (other != this) {
    std::swap(mail_, other->mail_);
    std::swap(chat_, other->chat_);
    std::swap(notice_, other->notice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AwolMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AwolMsg_descriptor_;
  metadata.reflection = AwolMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AwolMsgItem::kIdFieldNumber;
const int AwolMsgItem::kMsgFieldNumber;
#endif  // !_MSC_VER

AwolMsgItem::AwolMsgItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.AwolMsgItem)
}

void AwolMsgItem::InitAsDefaultInstance() {
  msg_ = const_cast< ::awolapp::AwolMsg*>(&::awolapp::AwolMsg::default_instance());
}

AwolMsgItem::AwolMsgItem(const AwolMsgItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.AwolMsgItem)
}

void AwolMsgItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  msg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AwolMsgItem::~AwolMsgItem() {
  // @@protoc_insertion_point(destructor:awolapp.AwolMsgItem)
  SharedDtor();
}

void AwolMsgItem::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void AwolMsgItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwolMsgItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AwolMsgItem_descriptor_;
}

const AwolMsgItem& AwolMsgItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

AwolMsgItem* AwolMsgItem::default_instance_ = NULL;

AwolMsgItem* AwolMsgItem::New() const {
  return new AwolMsgItem;
}

void AwolMsgItem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_msg()) {
      if (msg_ != NULL) msg_->::awolapp::AwolMsg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AwolMsgItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.AwolMsgItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required .awolapp.AwolMsg msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.AwolMsgItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.AwolMsgItem)
  return false;
#undef DO_
}

void AwolMsgItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.AwolMsgItem)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required .awolapp.AwolMsg msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.AwolMsgItem)
}

::google::protobuf::uint8* AwolMsgItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.AwolMsgItem)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required .awolapp.AwolMsg msg = 2;
  if (has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.AwolMsgItem)
  return target;
}

int AwolMsgItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // required .awolapp.AwolMsg msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwolMsgItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AwolMsgItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AwolMsgItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AwolMsgItem::MergeFrom(const AwolMsgItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_msg()) {
      mutable_msg()->::awolapp::AwolMsg::MergeFrom(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AwolMsgItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwolMsgItem::CopyFrom(const AwolMsgItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwolMsgItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msg()) {
    if (!this->msg().IsInitialized()) return false;
  }
  return true;
}

void AwolMsgItem::Swap(AwolMsgItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AwolMsgItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AwolMsgItem_descriptor_;
  metadata.reflection = AwolMsgItem_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CSAwalMsg_MsgCMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_MsgCMD_descriptor_;
}
bool CSAwalMsg_MsgCMD_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_LIST;
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_UPDATE;
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_SENDTO;
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_GET;
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_REMOVE;
const CSAwalMsg_MsgCMD CSAwalMsg::MSG_CMD_NOTIFY;
const CSAwalMsg_MsgCMD CSAwalMsg::MsgCMD_MIN;
const CSAwalMsg_MsgCMD CSAwalMsg::MsgCMD_MAX;
const int CSAwalMsg::MsgCMD_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* CSAwalMsg_AwolMsgSyncCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_AwolMsgSyncCode_descriptor_;
}
bool CSAwalMsg_AwolMsgSyncCode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CSAwalMsg_AwolMsgSyncCode CSAwalMsg::MSG_SYNC_REMOVE;
const CSAwalMsg_AwolMsgSyncCode CSAwalMsg::MSG_SYNC_RECV;
const CSAwalMsg_AwolMsgSyncCode CSAwalMsg::MSG_SYNC_GET;
const CSAwalMsg_AwolMsgSyncCode CSAwalMsg::AwolMsgSyncCode_MIN;
const CSAwalMsg_AwolMsgSyncCode CSAwalMsg::AwolMsgSyncCode_MAX;
const int CSAwalMsg::AwolMsgSyncCode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CSAwalMsg_Cookie::CSAwalMsg_Cookie()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.CSAwalMsg.Cookie)
}

void CSAwalMsg_Cookie::InitAsDefaultInstance() {
}

CSAwalMsg_Cookie::CSAwalMsg_Cookie(const CSAwalMsg_Cookie& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.CSAwalMsg.Cookie)
}

void CSAwalMsg_Cookie::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSAwalMsg_Cookie::~CSAwalMsg_Cookie() {
  // @@protoc_insertion_point(destructor:awolapp.CSAwalMsg.Cookie)
  SharedDtor();
}

void CSAwalMsg_Cookie::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSAwalMsg_Cookie::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSAwalMsg_Cookie::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_Cookie_descriptor_;
}

const CSAwalMsg_Cookie& CSAwalMsg_Cookie::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

CSAwalMsg_Cookie* CSAwalMsg_Cookie::default_instance_ = NULL;

CSAwalMsg_Cookie* CSAwalMsg_Cookie::New() const {
  return new CSAwalMsg_Cookie;
}

void CSAwalMsg_Cookie::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSAwalMsg_Cookie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.CSAwalMsg.Cookie)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.CSAwalMsg.Cookie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.CSAwalMsg.Cookie)
  return false;
#undef DO_
}

void CSAwalMsg_Cookie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.CSAwalMsg.Cookie)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.CSAwalMsg.Cookie)
}

::google::protobuf::uint8* CSAwalMsg_Cookie::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.CSAwalMsg.Cookie)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.CSAwalMsg.Cookie)
  return target;
}

int CSAwalMsg_Cookie::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSAwalMsg_Cookie::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSAwalMsg_Cookie* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSAwalMsg_Cookie*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSAwalMsg_Cookie::MergeFrom(const CSAwalMsg_Cookie& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSAwalMsg_Cookie::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSAwalMsg_Cookie::CopyFrom(const CSAwalMsg_Cookie& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAwalMsg_Cookie::IsInitialized() const {

  return true;
}

void CSAwalMsg_Cookie::Swap(CSAwalMsg_Cookie* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSAwalMsg_Cookie::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSAwalMsg_Cookie_descriptor_;
  metadata.reflection = CSAwalMsg_Cookie_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CSAwalMsg_Request::kIdFieldNumber;
const int CSAwalMsg_Request::kSendtoFieldNumber;
const int CSAwalMsg_Request::kOpcodeFieldNumber;
const int CSAwalMsg_Request::kMsgFieldNumber;
#endif  // !_MSC_VER

CSAwalMsg_Request::CSAwalMsg_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.CSAwalMsg.Request)
}

void CSAwalMsg_Request::InitAsDefaultInstance() {
  sendto_ = const_cast< ::awolmsg::MsgAgent*>(&::awolmsg::MsgAgent::default_instance());
  msg_ = const_cast< ::awolapp::AwolMsg*>(&::awolapp::AwolMsg::default_instance());
}

CSAwalMsg_Request::CSAwalMsg_Request(const CSAwalMsg_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.CSAwalMsg.Request)
}

void CSAwalMsg_Request::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  sendto_ = NULL;
  opcode_ = 0;
  msg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSAwalMsg_Request::~CSAwalMsg_Request() {
  // @@protoc_insertion_point(destructor:awolapp.CSAwalMsg.Request)
  SharedDtor();
}

void CSAwalMsg_Request::SharedDtor() {
  if (this != default_instance_) {
    delete sendto_;
    delete msg_;
  }
}

void CSAwalMsg_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSAwalMsg_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_Request_descriptor_;
}

const CSAwalMsg_Request& CSAwalMsg_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

CSAwalMsg_Request* CSAwalMsg_Request::default_instance_ = NULL;

CSAwalMsg_Request* CSAwalMsg_Request::New() const {
  return new CSAwalMsg_Request;
}

void CSAwalMsg_Request::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_sendto()) {
      if (sendto_ != NULL) sendto_->::awolmsg::MsgAgent::Clear();
    }
    opcode_ = 0;
    if (has_msg()) {
      if (msg_ != NULL) msg_->::awolapp::AwolMsg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSAwalMsg_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.CSAwalMsg.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sendto;
        break;
      }

      // optional .awolmsg.MsgAgent sendto = 3;
      case 3: {
        if (tag == 26) {
         parse_sendto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sendto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opcode;
        break;
      }

      // optional int32 opcode = 4;
      case 4: {
        if (tag == 32) {
         parse_opcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opcode_)));
          set_has_opcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msg;
        break;
      }

      // optional .awolapp.AwolMsg msg = 5;
      case 5: {
        if (tag == 42) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.CSAwalMsg.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.CSAwalMsg.Request)
  return false;
#undef DO_
}

void CSAwalMsg_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.CSAwalMsg.Request)
  // optional uint64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // optional .awolmsg.MsgAgent sendto = 3;
  if (has_sendto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sendto(), output);
  }

  // optional int32 opcode = 4;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->opcode(), output);
  }

  // optional .awolapp.AwolMsg msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.CSAwalMsg.Request)
}

::google::protobuf::uint8* CSAwalMsg_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.CSAwalMsg.Request)
  // optional uint64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // optional .awolmsg.MsgAgent sendto = 3;
  if (has_sendto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sendto(), target);
  }

  // optional int32 opcode = 4;
  if (has_opcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->opcode(), target);
  }

  // optional .awolapp.AwolMsg msg = 5;
  if (has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.CSAwalMsg.Request)
  return target;
}

int CSAwalMsg_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional .awolmsg.MsgAgent sendto = 3;
    if (has_sendto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sendto());
    }

    // optional int32 opcode = 4;
    if (has_opcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opcode());
    }

    // optional .awolapp.AwolMsg msg = 5;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSAwalMsg_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSAwalMsg_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSAwalMsg_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSAwalMsg_Request::MergeFrom(const CSAwalMsg_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sendto()) {
      mutable_sendto()->::awolmsg::MsgAgent::MergeFrom(from.sendto());
    }
    if (from.has_opcode()) {
      set_opcode(from.opcode());
    }
    if (from.has_msg()) {
      mutable_msg()->::awolapp::AwolMsg::MergeFrom(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSAwalMsg_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSAwalMsg_Request::CopyFrom(const CSAwalMsg_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAwalMsg_Request::IsInitialized() const {

  if (has_sendto()) {
    if (!this->sendto().IsInitialized()) return false;
  }
  if (has_msg()) {
    if (!this->msg().IsInitialized()) return false;
  }
  return true;
}

void CSAwalMsg_Request::Swap(CSAwalMsg_Request* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sendto_, other->sendto_);
    std::swap(opcode_, other->opcode_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSAwalMsg_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSAwalMsg_Request_descriptor_;
  metadata.reflection = CSAwalMsg_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CSAwalMsg_Response::kRetFieldNumber;
const int CSAwalMsg_Response::kMsglistFieldNumber;
#endif  // !_MSC_VER

CSAwalMsg_Response::CSAwalMsg_Response()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.CSAwalMsg.Response)
}

void CSAwalMsg_Response::InitAsDefaultInstance() {
}

CSAwalMsg_Response::CSAwalMsg_Response(const CSAwalMsg_Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.CSAwalMsg.Response)
}

void CSAwalMsg_Response::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSAwalMsg_Response::~CSAwalMsg_Response() {
  // @@protoc_insertion_point(destructor:awolapp.CSAwalMsg.Response)
  SharedDtor();
}

void CSAwalMsg_Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSAwalMsg_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSAwalMsg_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_Response_descriptor_;
}

const CSAwalMsg_Response& CSAwalMsg_Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

CSAwalMsg_Response* CSAwalMsg_Response::default_instance_ = NULL;

CSAwalMsg_Response* CSAwalMsg_Response::New() const {
  return new CSAwalMsg_Response;
}

void CSAwalMsg_Response::Clear() {
  ret_ = 0;
  msglist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSAwalMsg_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.CSAwalMsg.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msglist;
        break;
      }

      // repeated .awolapp.AwolMsgItem msglist = 2;
      case 2: {
        if (tag == 18) {
         parse_msglist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msglist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msglist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.CSAwalMsg.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.CSAwalMsg.Response)
  return false;
#undef DO_
}

void CSAwalMsg_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.CSAwalMsg.Response)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // repeated .awolapp.AwolMsgItem msglist = 2;
  for (int i = 0; i < this->msglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msglist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.CSAwalMsg.Response)
}

::google::protobuf::uint8* CSAwalMsg_Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.CSAwalMsg.Response)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // repeated .awolapp.AwolMsgItem msglist = 2;
  for (int i = 0; i < this->msglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->msglist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.CSAwalMsg.Response)
  return target;
}

int CSAwalMsg_Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  // repeated .awolapp.AwolMsgItem msglist = 2;
  total_size += 1 * this->msglist_size();
  for (int i = 0; i < this->msglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msglist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSAwalMsg_Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSAwalMsg_Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSAwalMsg_Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSAwalMsg_Response::MergeFrom(const CSAwalMsg_Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  msglist_.MergeFrom(from.msglist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSAwalMsg_Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSAwalMsg_Response::CopyFrom(const CSAwalMsg_Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAwalMsg_Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->msglist())) return false;
  return true;
}

void CSAwalMsg_Response::Swap(CSAwalMsg_Response* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    msglist_.Swap(&other->msglist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSAwalMsg_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSAwalMsg_Response_descriptor_;
  metadata.reflection = CSAwalMsg_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CSAwalMsg_Notify::kSyncFieldNumber;
const int CSAwalMsg_Notify::kMsglistFieldNumber;
#endif  // !_MSC_VER

CSAwalMsg_Notify::CSAwalMsg_Notify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.CSAwalMsg.Notify)
}

void CSAwalMsg_Notify::InitAsDefaultInstance() {
}

CSAwalMsg_Notify::CSAwalMsg_Notify(const CSAwalMsg_Notify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.CSAwalMsg.Notify)
}

void CSAwalMsg_Notify::SharedCtor() {
  _cached_size_ = 0;
  sync_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSAwalMsg_Notify::~CSAwalMsg_Notify() {
  // @@protoc_insertion_point(destructor:awolapp.CSAwalMsg.Notify)
  SharedDtor();
}

void CSAwalMsg_Notify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSAwalMsg_Notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSAwalMsg_Notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_Notify_descriptor_;
}

const CSAwalMsg_Notify& CSAwalMsg_Notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

CSAwalMsg_Notify* CSAwalMsg_Notify::default_instance_ = NULL;

CSAwalMsg_Notify* CSAwalMsg_Notify::New() const {
  return new CSAwalMsg_Notify;
}

void CSAwalMsg_Notify::Clear() {
  sync_ = 1;
  msglist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSAwalMsg_Notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.CSAwalMsg.Notify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .awolapp.CSAwalMsg.AwolMsgSyncCode sync = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::awolapp::CSAwalMsg_AwolMsgSyncCode_IsValid(value)) {
            set_sync(static_cast< ::awolapp::CSAwalMsg_AwolMsgSyncCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msglist;
        break;
      }

      // repeated .awolapp.AwolMsgItem msglist = 2;
      case 2: {
        if (tag == 18) {
         parse_msglist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msglist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msglist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.CSAwalMsg.Notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.CSAwalMsg.Notify)
  return false;
#undef DO_
}

void CSAwalMsg_Notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.CSAwalMsg.Notify)
  // required .awolapp.CSAwalMsg.AwolMsgSyncCode sync = 1;
  if (has_sync()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sync(), output);
  }

  // repeated .awolapp.AwolMsgItem msglist = 2;
  for (int i = 0; i < this->msglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msglist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.CSAwalMsg.Notify)
}

::google::protobuf::uint8* CSAwalMsg_Notify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.CSAwalMsg.Notify)
  // required .awolapp.CSAwalMsg.AwolMsgSyncCode sync = 1;
  if (has_sync()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sync(), target);
  }

  // repeated .awolapp.AwolMsgItem msglist = 2;
  for (int i = 0; i < this->msglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->msglist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.CSAwalMsg.Notify)
  return target;
}

int CSAwalMsg_Notify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .awolapp.CSAwalMsg.AwolMsgSyncCode sync = 1;
    if (has_sync()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sync());
    }

  }
  // repeated .awolapp.AwolMsgItem msglist = 2;
  total_size += 1 * this->msglist_size();
  for (int i = 0; i < this->msglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msglist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSAwalMsg_Notify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSAwalMsg_Notify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSAwalMsg_Notify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSAwalMsg_Notify::MergeFrom(const CSAwalMsg_Notify& from) {
  GOOGLE_CHECK_NE(&from, this);
  msglist_.MergeFrom(from.msglist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sync()) {
      set_sync(from.sync());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSAwalMsg_Notify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSAwalMsg_Notify::CopyFrom(const CSAwalMsg_Notify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAwalMsg_Notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->msglist())) return false;
  return true;
}

void CSAwalMsg_Notify::Swap(CSAwalMsg_Notify* other) {
  if (other != this) {
    std::swap(sync_, other->sync_);
    msglist_.Swap(&other->msglist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSAwalMsg_Notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSAwalMsg_Notify_descriptor_;
  metadata.reflection = CSAwalMsg_Notify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CSAwalMsg::kCmdFieldNumber;
const int CSAwalMsg::kCookieFieldNumber;
const int CSAwalMsg::kRequestFieldNumber;
const int CSAwalMsg::kResponseFieldNumber;
const int CSAwalMsg::kNotifyFieldNumber;
#endif  // !_MSC_VER

CSAwalMsg::CSAwalMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolapp.CSAwalMsg)
}

void CSAwalMsg::InitAsDefaultInstance() {
  cookie_ = const_cast< ::awolapp::CSAwalMsg_Cookie*>(&::awolapp::CSAwalMsg_Cookie::default_instance());
  request_ = const_cast< ::awolapp::CSAwalMsg_Request*>(&::awolapp::CSAwalMsg_Request::default_instance());
  response_ = const_cast< ::awolapp::CSAwalMsg_Response*>(&::awolapp::CSAwalMsg_Response::default_instance());
  notify_ = const_cast< ::awolapp::CSAwalMsg_Notify*>(&::awolapp::CSAwalMsg_Notify::default_instance());
}

CSAwalMsg::CSAwalMsg(const CSAwalMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolapp.CSAwalMsg)
}

void CSAwalMsg::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 1;
  cookie_ = NULL;
  request_ = NULL;
  response_ = NULL;
  notify_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSAwalMsg::~CSAwalMsg() {
  // @@protoc_insertion_point(destructor:awolapp.CSAwalMsg)
  SharedDtor();
}

void CSAwalMsg::SharedDtor() {
  if (this != default_instance_) {
    delete cookie_;
    delete request_;
    delete response_;
    delete notify_;
  }
}

void CSAwalMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSAwalMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSAwalMsg_descriptor_;
}

const CSAwalMsg& CSAwalMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolapp_2eproto();
  return *default_instance_;
}

CSAwalMsg* CSAwalMsg::default_instance_ = NULL;

CSAwalMsg* CSAwalMsg::New() const {
  return new CSAwalMsg;
}

void CSAwalMsg::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    cmd_ = 1;
    if (has_cookie()) {
      if (cookie_ != NULL) cookie_->::awolapp::CSAwalMsg_Cookie::Clear();
    }
    if (has_request()) {
      if (request_ != NULL) request_->::awolapp::CSAwalMsg_Request::Clear();
    }
    if (has_response()) {
      if (response_ != NULL) response_->::awolapp::CSAwalMsg_Response::Clear();
    }
    if (has_notify()) {
      if (notify_ != NULL) notify_->::awolapp::CSAwalMsg_Notify::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSAwalMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolapp.CSAwalMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .awolapp.CSAwalMsg.MsgCMD cmd = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::awolapp::CSAwalMsg_MsgCMD_IsValid(value)) {
            set_cmd(static_cast< ::awolapp::CSAwalMsg_MsgCMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cookie;
        break;
      }

      // optional .awolapp.CSAwalMsg.Cookie cookie = 2;
      case 2: {
        if (tag == 18) {
         parse_cookie:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cookie()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_request;
        break;
      }

      // optional .awolapp.CSAwalMsg.Request request = 3;
      case 3: {
        if (tag == 26) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_response;
        break;
      }

      // optional .awolapp.CSAwalMsg.Response response = 4;
      case 4: {
        if (tag == 34) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_notify;
        break;
      }

      // optional .awolapp.CSAwalMsg.Notify notify = 5;
      case 5: {
        if (tag == 42) {
         parse_notify:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notify()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolapp.CSAwalMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolapp.CSAwalMsg)
  return false;
#undef DO_
}

void CSAwalMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolapp.CSAwalMsg)
  // required .awolapp.CSAwalMsg.MsgCMD cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .awolapp.CSAwalMsg.Cookie cookie = 2;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cookie(), output);
  }

  // optional .awolapp.CSAwalMsg.Request request = 3;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->request(), output);
  }

  // optional .awolapp.CSAwalMsg.Response response = 4;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->response(), output);
  }

  // optional .awolapp.CSAwalMsg.Notify notify = 5;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->notify(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolapp.CSAwalMsg)
}

::google::protobuf::uint8* CSAwalMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolapp.CSAwalMsg)
  // required .awolapp.CSAwalMsg.MsgCMD cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .awolapp.CSAwalMsg.Cookie cookie = 2;
  if (has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cookie(), target);
  }

  // optional .awolapp.CSAwalMsg.Request request = 3;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->request(), target);
  }

  // optional .awolapp.CSAwalMsg.Response response = 4;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->response(), target);
  }

  // optional .awolapp.CSAwalMsg.Notify notify = 5;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->notify(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolapp.CSAwalMsg)
  return target;
}

int CSAwalMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .awolapp.CSAwalMsg.MsgCMD cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .awolapp.CSAwalMsg.Cookie cookie = 2;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cookie());
    }

    // optional .awolapp.CSAwalMsg.Request request = 3;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

    // optional .awolapp.CSAwalMsg.Response response = 4;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

    // optional .awolapp.CSAwalMsg.Notify notify = 5;
    if (has_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notify());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSAwalMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSAwalMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSAwalMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSAwalMsg::MergeFrom(const CSAwalMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_cookie()) {
      mutable_cookie()->::awolapp::CSAwalMsg_Cookie::MergeFrom(from.cookie());
    }
    if (from.has_request()) {
      mutable_request()->::awolapp::CSAwalMsg_Request::MergeFrom(from.request());
    }
    if (from.has_response()) {
      mutable_response()->::awolapp::CSAwalMsg_Response::MergeFrom(from.response());
    }
    if (from.has_notify()) {
      mutable_notify()->::awolapp::CSAwalMsg_Notify::MergeFrom(from.notify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSAwalMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSAwalMsg::CopyFrom(const CSAwalMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAwalMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  if (has_response()) {
    if (!this->response().IsInitialized()) return false;
  }
  if (has_notify()) {
    if (!this->notify().IsInitialized()) return false;
  }
  return true;
}

void CSAwalMsg::Swap(CSAwalMsg* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(cookie_, other->cookie_);
    std::swap(request_, other->request_);
    std::swap(response_, other->response_);
    std::swap(notify_, other->notify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSAwalMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSAwalMsg_descriptor_;
  metadata.reflection = CSAwalMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace awolapp

// @@protoc_insertion_point(global_scope)
