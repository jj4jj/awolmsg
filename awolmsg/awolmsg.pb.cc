// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: awolmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "awolmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace awolmsg {

namespace {

const ::google::protobuf::Descriptor* MsgAgent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAgent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgExt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgExt_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFlag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFlag_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgStoreCallBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgStoreCallBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_MsgData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_MsgData_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MaxMsgTypeConstValue_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgFlagOwnType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgFalgStoreOptions_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgFalgCpermOptions_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgOP_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_awolmsg_2eproto() {
  protobuf_AddDesc_awolmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "awolmsg.proto");
  GOOGLE_CHECK(file != NULL);
  MsgAgent_descriptor_ = file->message_type(0);
  static const int MsgAgent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAgent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAgent, id_),
  };
  MsgAgent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAgent_descriptor_,
      MsgAgent::default_instance_,
      MsgAgent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAgent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAgent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAgent));
  MsgExt_descriptor_ = file->message_type(1);
  static const int MsgExt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExt, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExt, ttl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExt, from_),
  };
  MsgExt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgExt_descriptor_,
      MsgExt::default_instance_,
      MsgExt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgExt));
  MsgFlag_descriptor_ = file->message_type(2);
  static const int MsgFlag_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFlag, owner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFlag, store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFlag, cperm_),
  };
  MsgFlag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFlag_descriptor_,
      MsgFlag::default_instance_,
      MsgFlag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFlag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFlag, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFlag));
  MsgStoreCallBack_descriptor_ = file->message_type(3);
  static const int MsgStoreCallBack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgStoreCallBack, cookie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgStoreCallBack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgStoreCallBack, msg_),
  };
  MsgStoreCallBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgStoreCallBack_descriptor_,
      MsgStoreCallBack::default_instance_,
      MsgStoreCallBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgStoreCallBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgStoreCallBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgStoreCallBack));
  Msg_descriptor_ = file->message_type(4);
  static const int Msg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, actor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, op_),
  };
  Msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_descriptor_,
      Msg::default_instance_,
      Msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg));
  Msg_MsgData_descriptor_ = Msg_descriptor_->nested_type(0);
  static const int Msg_MsgData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MsgData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MsgData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MsgData, ext_),
  };
  Msg_MsgData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_MsgData_descriptor_,
      Msg_MsgData::default_instance_,
      Msg_MsgData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MsgData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MsgData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_MsgData));
  NotifyMsg_descriptor_ = file->message_type(5);
  static const int NotifyMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMsg, actor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMsg, clientsrc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMsg, data_),
  };
  NotifyMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyMsg_descriptor_,
      NotifyMsg::default_instance_,
      NotifyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyMsg));
  MaxMsgTypeConstValue_descriptor_ = file->enum_type(0);
  MsgFlagOwnType_descriptor_ = file->enum_type(1);
  MsgFalgStoreOptions_descriptor_ = file->enum_type(2);
  MsgFalgCpermOptions_descriptor_ = file->enum_type(3);
  MsgOP_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_awolmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAgent_descriptor_, &MsgAgent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgExt_descriptor_, &MsgExt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFlag_descriptor_, &MsgFlag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgStoreCallBack_descriptor_, &MsgStoreCallBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_descriptor_, &Msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_MsgData_descriptor_, &Msg_MsgData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyMsg_descriptor_, &NotifyMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_awolmsg_2eproto() {
  delete MsgAgent::default_instance_;
  delete MsgAgent_reflection_;
  delete MsgExt::default_instance_;
  delete MsgExt_reflection_;
  delete MsgFlag::default_instance_;
  delete MsgFlag_reflection_;
  delete MsgStoreCallBack::default_instance_;
  delete MsgStoreCallBack_reflection_;
  delete Msg::default_instance_;
  delete Msg_reflection_;
  delete Msg_MsgData::default_instance_;
  delete Msg_MsgData_reflection_;
  delete NotifyMsg::default_instance_;
  delete NotifyMsg_reflection_;
}

void protobuf_AddDesc_awolmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rawolmsg.proto\022\007awolmsg\"$\n\010MsgAgent\022\014\n\004"
    "type\030\001 \002(\005\022\n\n\002id\030\002 \001(\004\"D\n\006MsgExt\022\014\n\004time"
    "\030\001 \001(\r\022\013\n\003ttl\030\002 \001(\r\022\037\n\004from\030\003 \001(\0132\021.awol"
    "msg.MsgAgent\"O\n\007MsgFlag\022&\n\005owner\030\001 \001(\0162\027"
    ".awolmsg.MsgFlagOwnType\022\r\n\005store\030\002 \001(\r\022\r"
    "\n\005cperm\030\003 \001(\r\"O\n\020MsgStoreCallBack\022\016\n\006coo"
    "kie\030\001 \001(\004\022\020\n\010clientid\030\002 \001(\005\022\031\n\003msg\030\003 \001(\013"
    "2\014.awolmsg.Msg\"\330\001\n\003Msg\022\014\n\004type\030\001 \002(\005\022 \n\005"
    "actor\030\002 \001(\0132\021.awolmsg.MsgAgent\022\"\n\004data\030\003"
    " \003(\0132\024.awolmsg.Msg.MsgData\022\036\n\004flag\030\004 \001(\013"
    "2\020.awolmsg.MsgFlag\022\032\n\002op\030\005 \001(\0162\016.awolmsg"
    ".MsgOP\032A\n\007MsgData\022\n\n\002id\030\001 \002(\004\022\014\n\004data\030\002 "
    "\001(\014\022\034\n\003ext\030\003 \001(\0132\017.awolmsg.MsgExt\"N\n\tNot"
    "ifyMsg\022 \n\005actor\030\001 \001(\0132\021.awolmsg.MsgAgent"
    "\022\021\n\tclientsrc\030\002 \001(\005\022\014\n\004data\030\003 \001(\014*,\n\024Max"
    "MsgTypeConstValue\022\024\n\020MAX_MSG_TYPE_NUM\020@*"
    "L\n\016MsgFlagOwnType\022\022\n\016MSG_OPT_OWN_BO\020\000\022\022\n"
    "\016MSG_OPT_OWN_SO\020\001\022\022\n\016MSG_OPT_OWN_CO\020\002*v\n"
    "\023MsgFalgStoreOptions\022\026\n\022MSG_OPT_STORE_NO"
    "NE\020\000\022\025\n\021MSG_OPT_STORE_TTL\020\001\022\027\n\023MSG_OPT_S"
    "TORE_SHIFT\020\002\022\027\n\023MSG_OPT_STORE_MYSQL\020\004*\250\001"
    "\n\023MsgFalgCpermOptions\022\026\n\022MSG_OPT_CPERM_N"
    "ONE\020\000\022\026\n\022MSG_OPT_CPERM_SEND\020\001\022\030\n\024MSG_OPT"
    "_CPERM_REMOVE\020\002\022\026\n\022MSG_OPT_CPERM_LIST\020\004\022"
    "\030\n\024MSG_OPT_CPERM_UPDATE\020\010\022\025\n\021MSG_OPT_CPE"
    "RM_ALL\020\017*Z\n\005MsgOP\022\017\n\013MSG_OP_LIST\020\001\022\016\n\nMS"
    "G_OP_SET\020\002\022\016\n\nMSG_OP_GET\020\003\022\r\n\tMSG_OP_RM\020"
    "\004\022\021\n\rMSG_OP_INSERT\020\005", 1100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "awolmsg.proto", &protobuf_RegisterTypes);
  MsgAgent::default_instance_ = new MsgAgent();
  MsgExt::default_instance_ = new MsgExt();
  MsgFlag::default_instance_ = new MsgFlag();
  MsgStoreCallBack::default_instance_ = new MsgStoreCallBack();
  Msg::default_instance_ = new Msg();
  Msg_MsgData::default_instance_ = new Msg_MsgData();
  NotifyMsg::default_instance_ = new NotifyMsg();
  MsgAgent::default_instance_->InitAsDefaultInstance();
  MsgExt::default_instance_->InitAsDefaultInstance();
  MsgFlag::default_instance_->InitAsDefaultInstance();
  MsgStoreCallBack::default_instance_->InitAsDefaultInstance();
  Msg::default_instance_->InitAsDefaultInstance();
  Msg_MsgData::default_instance_->InitAsDefaultInstance();
  NotifyMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_awolmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_awolmsg_2eproto {
  StaticDescriptorInitializer_awolmsg_2eproto() {
    protobuf_AddDesc_awolmsg_2eproto();
  }
} static_descriptor_initializer_awolmsg_2eproto_;
const ::google::protobuf::EnumDescriptor* MaxMsgTypeConstValue_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaxMsgTypeConstValue_descriptor_;
}
bool MaxMsgTypeConstValue_IsValid(int value) {
  switch(value) {
    case 64:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgFlagOwnType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFlagOwnType_descriptor_;
}
bool MsgFlagOwnType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgFalgStoreOptions_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFalgStoreOptions_descriptor_;
}
bool MsgFalgStoreOptions_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgFalgCpermOptions_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFalgCpermOptions_descriptor_;
}
bool MsgFalgCpermOptions_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgOP_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgOP_descriptor_;
}
bool MsgOP_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAgent::kTypeFieldNumber;
const int MsgAgent::kIdFieldNumber;
#endif  // !_MSC_VER

MsgAgent::MsgAgent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.MsgAgent)
}

void MsgAgent::InitAsDefaultInstance() {
}

MsgAgent::MsgAgent(const MsgAgent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.MsgAgent)
}

void MsgAgent::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAgent::~MsgAgent() {
  // @@protoc_insertion_point(destructor:awolmsg.MsgAgent)
  SharedDtor();
}

void MsgAgent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAgent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAgent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAgent_descriptor_;
}

const MsgAgent& MsgAgent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

MsgAgent* MsgAgent::default_instance_ = NULL;

MsgAgent* MsgAgent::New() const {
  return new MsgAgent;
}

void MsgAgent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgAgent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAgent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.MsgAgent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional uint64 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.MsgAgent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.MsgAgent)
  return false;
#undef DO_
}

void MsgAgent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.MsgAgent)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional uint64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.MsgAgent)
}

::google::protobuf::uint8* MsgAgent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.MsgAgent)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional uint64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.MsgAgent)
  return target;
}

int MsgAgent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional uint64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAgent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAgent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAgent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAgent::MergeFrom(const MsgAgent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAgent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAgent::CopyFrom(const MsgAgent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAgent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgAgent::Swap(MsgAgent* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAgent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAgent_descriptor_;
  metadata.reflection = MsgAgent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgExt::kTimeFieldNumber;
const int MsgExt::kTtlFieldNumber;
const int MsgExt::kFromFieldNumber;
#endif  // !_MSC_VER

MsgExt::MsgExt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.MsgExt)
}

void MsgExt::InitAsDefaultInstance() {
  from_ = const_cast< ::awolmsg::MsgAgent*>(&::awolmsg::MsgAgent::default_instance());
}

MsgExt::MsgExt(const MsgExt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.MsgExt)
}

void MsgExt::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0u;
  ttl_ = 0u;
  from_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgExt::~MsgExt() {
  // @@protoc_insertion_point(destructor:awolmsg.MsgExt)
  SharedDtor();
}

void MsgExt::SharedDtor() {
  if (this != default_instance_) {
    delete from_;
  }
}

void MsgExt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgExt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgExt_descriptor_;
}

const MsgExt& MsgExt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

MsgExt* MsgExt::default_instance_ = NULL;

MsgExt* MsgExt::New() const {
  return new MsgExt;
}

void MsgExt::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgExt*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(time_, ttl_);
    if (has_from()) {
      if (from_ != NULL) from_->::awolmsg::MsgAgent::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgExt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.MsgExt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ttl;
        break;
      }

      // optional uint32 ttl = 2;
      case 2: {
        if (tag == 16) {
         parse_ttl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ttl_)));
          set_has_ttl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_from;
        break;
      }

      // optional .awolmsg.MsgAgent from = 3;
      case 3: {
        if (tag == 26) {
         parse_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.MsgExt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.MsgExt)
  return false;
#undef DO_
}

void MsgExt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.MsgExt)
  // optional uint32 time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }

  // optional uint32 ttl = 2;
  if (has_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ttl(), output);
  }

  // optional .awolmsg.MsgAgent from = 3;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->from(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.MsgExt)
}

::google::protobuf::uint8* MsgExt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.MsgExt)
  // optional uint32 time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }

  // optional uint32 ttl = 2;
  if (has_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ttl(), target);
  }

  // optional .awolmsg.MsgAgent from = 3;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->from(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.MsgExt)
  return target;
}

int MsgExt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 ttl = 2;
    if (has_ttl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ttl());
    }

    // optional .awolmsg.MsgAgent from = 3;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->from());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgExt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgExt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgExt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgExt::MergeFrom(const MsgExt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_ttl()) {
      set_ttl(from.ttl());
    }
    if (from.has_from()) {
      mutable_from()->::awolmsg::MsgAgent::MergeFrom(from.from());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgExt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgExt::CopyFrom(const MsgExt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExt::IsInitialized() const {

  if (has_from()) {
    if (!this->from().IsInitialized()) return false;
  }
  return true;
}

void MsgExt::Swap(MsgExt* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(ttl_, other->ttl_);
    std::swap(from_, other->from_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgExt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgExt_descriptor_;
  metadata.reflection = MsgExt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFlag::kOwnerFieldNumber;
const int MsgFlag::kStoreFieldNumber;
const int MsgFlag::kCpermFieldNumber;
#endif  // !_MSC_VER

MsgFlag::MsgFlag()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.MsgFlag)
}

void MsgFlag::InitAsDefaultInstance() {
}

MsgFlag::MsgFlag(const MsgFlag& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.MsgFlag)
}

void MsgFlag::SharedCtor() {
  _cached_size_ = 0;
  owner_ = 0;
  store_ = 0u;
  cperm_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFlag::~MsgFlag() {
  // @@protoc_insertion_point(destructor:awolmsg.MsgFlag)
  SharedDtor();
}

void MsgFlag::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgFlag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgFlag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFlag_descriptor_;
}

const MsgFlag& MsgFlag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

MsgFlag* MsgFlag::default_instance_ = NULL;

MsgFlag* MsgFlag::New() const {
  return new MsgFlag;
}

void MsgFlag::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgFlag*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(owner_, cperm_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.MsgFlag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .awolmsg.MsgFlagOwnType owner = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::awolmsg::MsgFlagOwnType_IsValid(value)) {
            set_owner(static_cast< ::awolmsg::MsgFlagOwnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_store;
        break;
      }

      // optional uint32 store = 2;
      case 2: {
        if (tag == 16) {
         parse_store:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &store_)));
          set_has_store();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cperm;
        break;
      }

      // optional uint32 cperm = 3;
      case 3: {
        if (tag == 24) {
         parse_cperm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cperm_)));
          set_has_cperm();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.MsgFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.MsgFlag)
  return false;
#undef DO_
}

void MsgFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.MsgFlag)
  // optional .awolmsg.MsgFlagOwnType owner = 1;
  if (has_owner()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->owner(), output);
  }

  // optional uint32 store = 2;
  if (has_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->store(), output);
  }

  // optional uint32 cperm = 3;
  if (has_cperm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cperm(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.MsgFlag)
}

::google::protobuf::uint8* MsgFlag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.MsgFlag)
  // optional .awolmsg.MsgFlagOwnType owner = 1;
  if (has_owner()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->owner(), target);
  }

  // optional uint32 store = 2;
  if (has_store()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->store(), target);
  }

  // optional uint32 cperm = 3;
  if (has_cperm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cperm(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.MsgFlag)
  return target;
}

int MsgFlag::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .awolmsg.MsgFlagOwnType owner = 1;
    if (has_owner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->owner());
    }

    // optional uint32 store = 2;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->store());
    }

    // optional uint32 cperm = 3;
    if (has_cperm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cperm());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgFlag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFlag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFlag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFlag::MergeFrom(const MsgFlag& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_owner()) {
      set_owner(from.owner());
    }
    if (from.has_store()) {
      set_store(from.store());
    }
    if (from.has_cperm()) {
      set_cperm(from.cperm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFlag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFlag::CopyFrom(const MsgFlag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFlag::IsInitialized() const {

  return true;
}

void MsgFlag::Swap(MsgFlag* other) {
  if (other != this) {
    std::swap(owner_, other->owner_);
    std::swap(store_, other->store_);
    std::swap(cperm_, other->cperm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFlag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFlag_descriptor_;
  metadata.reflection = MsgFlag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgStoreCallBack::kCookieFieldNumber;
const int MsgStoreCallBack::kClientidFieldNumber;
const int MsgStoreCallBack::kMsgFieldNumber;
#endif  // !_MSC_VER

MsgStoreCallBack::MsgStoreCallBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.MsgStoreCallBack)
}

void MsgStoreCallBack::InitAsDefaultInstance() {
  msg_ = const_cast< ::awolmsg::Msg*>(&::awolmsg::Msg::default_instance());
}

MsgStoreCallBack::MsgStoreCallBack(const MsgStoreCallBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.MsgStoreCallBack)
}

void MsgStoreCallBack::SharedCtor() {
  _cached_size_ = 0;
  cookie_ = GOOGLE_ULONGLONG(0);
  clientid_ = 0;
  msg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgStoreCallBack::~MsgStoreCallBack() {
  // @@protoc_insertion_point(destructor:awolmsg.MsgStoreCallBack)
  SharedDtor();
}

void MsgStoreCallBack::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void MsgStoreCallBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgStoreCallBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgStoreCallBack_descriptor_;
}

const MsgStoreCallBack& MsgStoreCallBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

MsgStoreCallBack* MsgStoreCallBack::default_instance_ = NULL;

MsgStoreCallBack* MsgStoreCallBack::New() const {
  return new MsgStoreCallBack;
}

void MsgStoreCallBack::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cookie_ = GOOGLE_ULONGLONG(0);
    clientid_ = 0;
    if (has_msg()) {
      if (msg_ != NULL) msg_->::awolmsg::Msg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgStoreCallBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.MsgStoreCallBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 cookie = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cookie_)));
          set_has_cookie();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_clientid;
        break;
      }

      // optional int32 clientid = 2;
      case 2: {
        if (tag == 16) {
         parse_clientid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional .awolmsg.Msg msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.MsgStoreCallBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.MsgStoreCallBack)
  return false;
#undef DO_
}

void MsgStoreCallBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.MsgStoreCallBack)
  // optional uint64 cookie = 1;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cookie(), output);
  }

  // optional int32 clientid = 2;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clientid(), output);
  }

  // optional .awolmsg.Msg msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.MsgStoreCallBack)
}

::google::protobuf::uint8* MsgStoreCallBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.MsgStoreCallBack)
  // optional uint64 cookie = 1;
  if (has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cookie(), target);
  }

  // optional int32 clientid = 2;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clientid(), target);
  }

  // optional .awolmsg.Msg msg = 3;
  if (has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.MsgStoreCallBack)
  return target;
}

int MsgStoreCallBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 cookie = 1;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cookie());
    }

    // optional int32 clientid = 2;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clientid());
    }

    // optional .awolmsg.Msg msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgStoreCallBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgStoreCallBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgStoreCallBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgStoreCallBack::MergeFrom(const MsgStoreCallBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cookie()) {
      set_cookie(from.cookie());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_msg()) {
      mutable_msg()->::awolmsg::Msg::MergeFrom(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgStoreCallBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgStoreCallBack::CopyFrom(const MsgStoreCallBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStoreCallBack::IsInitialized() const {

  if (has_msg()) {
    if (!this->msg().IsInitialized()) return false;
  }
  return true;
}

void MsgStoreCallBack::Swap(MsgStoreCallBack* other) {
  if (other != this) {
    std::swap(cookie_, other->cookie_);
    std::swap(clientid_, other->clientid_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgStoreCallBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgStoreCallBack_descriptor_;
  metadata.reflection = MsgStoreCallBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_MsgData::kIdFieldNumber;
const int Msg_MsgData::kDataFieldNumber;
const int Msg_MsgData::kExtFieldNumber;
#endif  // !_MSC_VER

Msg_MsgData::Msg_MsgData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.Msg.MsgData)
}

void Msg_MsgData::InitAsDefaultInstance() {
  ext_ = const_cast< ::awolmsg::MsgExt*>(&::awolmsg::MsgExt::default_instance());
}

Msg_MsgData::Msg_MsgData(const Msg_MsgData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.Msg.MsgData)
}

void Msg_MsgData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_MsgData::~Msg_MsgData() {
  // @@protoc_insertion_point(destructor:awolmsg.Msg.MsgData)
  SharedDtor();
}

void Msg_MsgData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
    delete ext_;
  }
}

void Msg_MsgData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_MsgData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_MsgData_descriptor_;
}

const Msg_MsgData& Msg_MsgData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

Msg_MsgData* Msg_MsgData::default_instance_ = NULL;

Msg_MsgData* Msg_MsgData::New() const {
  return new Msg_MsgData;
}

void Msg_MsgData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
    if (has_ext()) {
      if (ext_ != NULL) ext_->::awolmsg::MsgExt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_MsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.Msg.MsgData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ext;
        break;
      }

      // optional .awolmsg.MsgExt ext = 3;
      case 3: {
        if (tag == 26) {
         parse_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ext()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.Msg.MsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.Msg.MsgData)
  return false;
#undef DO_
}

void Msg_MsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.Msg.MsgData)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // optional .awolmsg.MsgExt ext = 3;
  if (has_ext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.Msg.MsgData)
}

::google::protobuf::uint8* Msg_MsgData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.Msg.MsgData)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // optional .awolmsg.MsgExt ext = 3;
  if (has_ext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.Msg.MsgData)
  return target;
}

int Msg_MsgData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional .awolmsg.MsgExt ext = 3;
    if (has_ext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_MsgData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_MsgData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_MsgData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_MsgData::MergeFrom(const Msg_MsgData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_ext()) {
      mutable_ext()->::awolmsg::MsgExt::MergeFrom(from.ext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_MsgData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_MsgData::CopyFrom(const Msg_MsgData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_MsgData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_ext()) {
    if (!this->ext().IsInitialized()) return false;
  }
  return true;
}

void Msg_MsgData::Swap(Msg_MsgData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(data_, other->data_);
    std::swap(ext_, other->ext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_MsgData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_MsgData_descriptor_;
  metadata.reflection = Msg_MsgData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Msg::kTypeFieldNumber;
const int Msg::kActorFieldNumber;
const int Msg::kDataFieldNumber;
const int Msg::kFlagFieldNumber;
const int Msg::kOpFieldNumber;
#endif  // !_MSC_VER

Msg::Msg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.Msg)
}

void Msg::InitAsDefaultInstance() {
  actor_ = const_cast< ::awolmsg::MsgAgent*>(&::awolmsg::MsgAgent::default_instance());
  flag_ = const_cast< ::awolmsg::MsgFlag*>(&::awolmsg::MsgFlag::default_instance());
}

Msg::Msg(const Msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.Msg)
}

void Msg::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  actor_ = NULL;
  flag_ = NULL;
  op_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg::~Msg() {
  // @@protoc_insertion_point(destructor:awolmsg.Msg)
  SharedDtor();
}

void Msg::SharedDtor() {
  if (this != default_instance_) {
    delete actor_;
    delete flag_;
  }
}

void Msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_descriptor_;
}

const Msg& Msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

Msg* Msg::default_instance_ = NULL;

Msg* Msg::New() const {
  return new Msg;
}

void Msg::Clear() {
  if (_has_bits_[0 / 32] & 27) {
    type_ = 0;
    if (has_actor()) {
      if (actor_ != NULL) actor_->::awolmsg::MsgAgent::Clear();
    }
    if (has_flag()) {
      if (flag_ != NULL) flag_->::awolmsg::MsgFlag::Clear();
    }
    op_ = 1;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.Msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_actor;
        break;
      }

      // optional .awolmsg.MsgAgent actor = 2;
      case 2: {
        if (tag == 18) {
         parse_actor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .awolmsg.Msg.MsgData data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectTag(34)) goto parse_flag;
        break;
      }

      // optional .awolmsg.MsgFlag flag = 4;
      case 4: {
        if (tag == 34) {
         parse_flag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flag()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_op;
        break;
      }

      // optional .awolmsg.MsgOP op = 5;
      case 5: {
        if (tag == 40) {
         parse_op:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::awolmsg::MsgOP_IsValid(value)) {
            set_op(static_cast< ::awolmsg::MsgOP >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.Msg)
  return false;
#undef DO_
}

void Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.Msg)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .awolmsg.MsgAgent actor = 2;
  if (has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->actor(), output);
  }

  // repeated .awolmsg.Msg.MsgData data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  // optional .awolmsg.MsgFlag flag = 4;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->flag(), output);
  }

  // optional .awolmsg.MsgOP op = 5;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->op(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.Msg)
}

::google::protobuf::uint8* Msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.Msg)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .awolmsg.MsgAgent actor = 2;
  if (has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->actor(), target);
  }

  // repeated .awolmsg.Msg.MsgData data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  // optional .awolmsg.MsgFlag flag = 4;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->flag(), target);
  }

  // optional .awolmsg.MsgOP op = 5;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->op(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.Msg)
  return target;
}

int Msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional .awolmsg.MsgAgent actor = 2;
    if (has_actor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actor());
    }

    // optional .awolmsg.MsgFlag flag = 4;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->flag());
    }

    // optional .awolmsg.MsgOP op = 5;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
    }

  }
  // repeated .awolmsg.Msg.MsgData data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg::MergeFrom(const Msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_actor()) {
      mutable_actor()->::awolmsg::MsgAgent::MergeFrom(from.actor());
    }
    if (from.has_flag()) {
      mutable_flag()->::awolmsg::MsgFlag::MergeFrom(from.flag());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg::CopyFrom(const Msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_actor()) {
    if (!this->actor().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void Msg::Swap(Msg* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(actor_, other->actor_);
    data_.Swap(&other->data_);
    std::swap(flag_, other->flag_);
    std::swap(op_, other->op_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_descriptor_;
  metadata.reflection = Msg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyMsg::kActorFieldNumber;
const int NotifyMsg::kClientsrcFieldNumber;
const int NotifyMsg::kDataFieldNumber;
#endif  // !_MSC_VER

NotifyMsg::NotifyMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:awolmsg.NotifyMsg)
}

void NotifyMsg::InitAsDefaultInstance() {
  actor_ = const_cast< ::awolmsg::MsgAgent*>(&::awolmsg::MsgAgent::default_instance());
}

NotifyMsg::NotifyMsg(const NotifyMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:awolmsg.NotifyMsg)
}

void NotifyMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  actor_ = NULL;
  clientsrc_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyMsg::~NotifyMsg() {
  // @@protoc_insertion_point(destructor:awolmsg.NotifyMsg)
  SharedDtor();
}

void NotifyMsg::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
    delete actor_;
  }
}

void NotifyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyMsg_descriptor_;
}

const NotifyMsg& NotifyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_awolmsg_2eproto();
  return *default_instance_;
}

NotifyMsg* NotifyMsg::default_instance_ = NULL;

NotifyMsg* NotifyMsg::New() const {
  return new NotifyMsg;
}

void NotifyMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_actor()) {
      if (actor_ != NULL) actor_->::awolmsg::MsgAgent::Clear();
    }
    clientsrc_ = 0;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:awolmsg.NotifyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .awolmsg.MsgAgent actor = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_clientsrc;
        break;
      }

      // optional int32 clientsrc = 2;
      case 2: {
        if (tag == 16) {
         parse_clientsrc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientsrc_)));
          set_has_clientsrc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:awolmsg.NotifyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:awolmsg.NotifyMsg)
  return false;
#undef DO_
}

void NotifyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:awolmsg.NotifyMsg)
  // optional .awolmsg.MsgAgent actor = 1;
  if (has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->actor(), output);
  }

  // optional int32 clientsrc = 2;
  if (has_clientsrc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clientsrc(), output);
  }

  // optional bytes data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:awolmsg.NotifyMsg)
}

::google::protobuf::uint8* NotifyMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:awolmsg.NotifyMsg)
  // optional .awolmsg.MsgAgent actor = 1;
  if (has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->actor(), target);
  }

  // optional int32 clientsrc = 2;
  if (has_clientsrc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clientsrc(), target);
  }

  // optional bytes data = 3;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:awolmsg.NotifyMsg)
  return target;
}

int NotifyMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .awolmsg.MsgAgent actor = 1;
    if (has_actor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actor());
    }

    // optional int32 clientsrc = 2;
    if (has_clientsrc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clientsrc());
    }

    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyMsg::MergeFrom(const NotifyMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actor()) {
      mutable_actor()->::awolmsg::MsgAgent::MergeFrom(from.actor());
    }
    if (from.has_clientsrc()) {
      set_clientsrc(from.clientsrc());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyMsg::CopyFrom(const NotifyMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyMsg::IsInitialized() const {

  if (has_actor()) {
    if (!this->actor().IsInitialized()) return false;
  }
  return true;
}

void NotifyMsg::Swap(NotifyMsg* other) {
  if (other != this) {
    std::swap(actor_, other->actor_);
    std::swap(clientsrc_, other->clientsrc_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyMsg_descriptor_;
  metadata.reflection = NotifyMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace awolmsg

// @@protoc_insertion_point(global_scope)
