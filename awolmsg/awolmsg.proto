package awolmsg;

enum MaxMsgTypeConstValue {
	MAX_MSG_TYPE_NUM = 64;
};

message MsgAgent {
	required int32		type=1;
	optional uint64		id=2;
}

message MsgExt {
    optional uint32		time=1;
    optional uint32		ttl=2;
	optional MsgAgent	from=3;
	optional uint32		version=4;
}

enum MsgFlagOwnType {
	MSG_OPT_OWN_BO = 0;//both
	MSG_OPT_OWN_SO = 1;//server only
	MSG_OPT_OWN_CO = 2;//client only
};
enum MsgFalgStoreOptions {
    MSG_OPT_STORE_NONE = 0;//
    MSG_OPT_STORE_TTL = 1;//expiration ?
    MSG_OPT_STORE_SHIFT = 2;//shift when full
    MSG_OPT_STORE_MYSQL = 4;//using mysql
};
enum MsgFalgCpermOptions {
	MSG_OPT_CPERM_NONE = 0;//flags
	MSG_OPT_CPERM_SEND = 1;//flags
	MSG_OPT_CPERM_REMOVE = 2;//flags
	MSG_OPT_CPERM_LIST = 4;//flags
	MSG_OPT_CPERM_UPDATE = 8;//flags
	MSG_OPT_CPERM_ALL = 15; //PERM
};
message MsgFlag {
	optional MsgFlagOwnType owner=1; //server only ? client only ? both ?
	optional uint32 store=2; //list ? hash ? set ?
	optional uint32 cperm=3; //other ext
}

enum MsgOP {
	MSG_OP_LIST=1;
	MSG_OP_SET=2;
	MSG_OP_GET=3;
	MSG_OP_RM=4;
	MSG_OP_INSERT=5;
}

message MsgStoreCallBack {
	optional	uint64	cookie=1;
	optional	int32	clientid=2;
	optional	Msg		msg=3;
};

message MsgMysqlStoreTable {
	optional	uint32	type=1;	 //msg type
	optional	string	actor=2; //type:id
	optional	uint64	msgid=3; //msgid
	optional	bytes	msg=4;		//msgdata
	optional	uint32	version=5;	//version
};

message Msg {
    required int32		type=1;
	optional MsgAgent	actor=2;
    repeated MsgData	data=3;
    optional MsgFlag	flag=4;
	optional MsgOP		op=5;
	message MsgData {
		required uint64	id=1;
		optional bytes	data=2;
		optional MsgExt	ext=3;
	}
};
